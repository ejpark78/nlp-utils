---
apiVersion: v1
kind: ConfigMap
metadata:
  name: daum
  namespace: crawler-batch-2019
data:
  ELASTIC_SEARCH_HOST: "https://corpus.ncsoft.com:9200"
  ELASTIC_SEARCH_AUTH: "crawler:crawler2019"
  INDEX_CULTURE: "crawler-daum-culture"
  INDEX_ECONOMY: "crawler-daum-economy"
  INDEX_INTERNATIONAL: "crawler-daum-international"
  INDEX_IT: "crawler-daum-it"
  INDEX_OPINION: "crawler-daum-opinion"
  INDEX_POLITICS: "crawler-daum-politics"
  INDEX_SOCIETY: "crawler-daum-society"
  INDEX_SPORTS: "crawler-daum-sports"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nate
  namespace: crawler-batch-2019
data:
  ELASTIC_SEARCH_HOST: "https://corpus.ncsoft.com:9200"
  ELASTIC_SEARCH_AUTH: "crawler:crawler2019"
  INDEX_ENTERTAINMENT: "crawler-nate-entertainment"
  INDEX_ECONOMY: "crawler-nate-economy"
  INDEX_INTERNATIONAL: "crawler-nate-international"
  INDEX_IT: "crawler-nate-it"
  INDEX_OPINION: "crawler-nate-opinion"
  INDEX_POLITICS: "crawler-nate-politics"
  INDEX_SOCIETY: "crawler-nate-society"
  INDEX_SPORTS: "crawler-nate-sports"

---
apiVersion: v1
kind: Pod
metadata:
  name: daum-culture
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_CULTURE)
      envFrom:
        - configMapRef:
            name: daum
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "daum",
        "--job_id", "culture",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: daum-economy
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_ECONOMY)
      envFrom:
        - configMapRef:
            name: daum
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "daum",
        "--job_id", "economy",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: daum-international
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_INTERNATIONAL)
      envFrom:
        - configMapRef:
            name: daum
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "daum",
        "--job_id", "international",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: daum-it
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_IT)
      envFrom:
        - configMapRef:
            name: daum
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "daum",
        "--job_id", "it",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: daum-opinion
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_OPINION)
      envFrom:
        - configMapRef:
            name: daum
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "daum",
        "--job_id", "opinion",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: daum-politics
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_POLITICS)
      envFrom:
        - configMapRef:
            name: daum
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "daum",
        "--job_id", "politics",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: daum-society
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_SOCIETY)
      envFrom:
        - configMapRef:
            name: daum
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "daum",
        "--job_id", "society",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: daum-sports
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_SPORTS)
      envFrom:
        - configMapRef:
            name: daum
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "daum",
        "--job_id", "sports",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: nate-economy
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_ECONOMY)
      envFrom:
        - configMapRef:
            name: nate
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "nate",
        "--job_id", "economy",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: nate-entertainment
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_ENTERTAINMENT)
      envFrom:
        - configMapRef:
            name: nate
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "nate",
        "--job_id", "entertainment",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: nate-international
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_INTERNATIONAL)
      envFrom:
        - configMapRef:
            name: nate
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "nate",
        "--job_id", "international",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: nate-it
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_IT)
      envFrom:
        - configMapRef:
            name: nate
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "nate",
        "--job_id", "it",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: nate-politics
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_POLITICS)
      envFrom:
        - configMapRef:
            name: nate
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "nate",
        "--job_id", "politics",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: nate-society
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_SOCIETY)
      envFrom:
        - configMapRef:
            name: nate
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "nate",
        "--job_id", "society",
        "--date_range", "2019-01-01~2020-12-31"
      ]

---
apiVersion: v1
kind: Pod
metadata:
  name: nate-sports
  namespace: crawler-batch-2019
  labels:
    app: crawler
spec:
  restartPolicy: Never
  nodeSelector:
    group: "crawler"
  containers:
    - name: default
      image: corpus:5000/crawler:latest
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits:
          cpu: 200m
          memory: 200Mi
      workingDir: /usr/local/app
      env:
        - name: ELASTIC_SEARCH_INDEX
          value: $(INDEX_SPORTS)
      envFrom:
        - configMapRef:
            name: nate
      args: [
        "python3", "batch.py",
        "--overwrite",
        "--category", "nate",
        "--job_id", "sports",
        "--date_range", "2019-01-01~2020-12-31"
      ]
