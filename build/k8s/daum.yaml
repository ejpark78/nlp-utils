---
apiVersion: v1
kind: ConfigMap
metadata:
  name: daum
  namespace: crawler-daum
data:
  ELASTIC_SEARCH_HOST: "https://corpus.ncsoft.com:9200"
  ELASTIC_SEARCH_AUTH: "crawler:crawler2019"
  INDEX_CULTURE: "crawler-daum-culture"
  INDEX_ECONOMY: "crawler-daum-economy"
  INDEX_INTERNATIONAL: "crawler-daum-international"
  INDEX_IT: "crawler-daum-it"
  INDEX_OPINION: "crawler-daum-opinion"
  INDEX_POLITICS: "crawler-daum-politics"
  INDEX_SOCIETY: "crawler-daum-society"
  INDEX_SPORTS: "crawler-daum-sports"

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: culture
  namespace: crawler-daum
  labels:
    app: crawler
spec:
  schedule: "0,30 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              workingDir: /usr/local/app
              env:
                - name: ELASTIC_SEARCH_INDEX
                  value: $(INDEX_CULTURE)
              envFrom:
                - configMapRef:
                    name: daum
              args: ["python3", "batch.py", "--category", "daum", "--job_id", "culture"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: economy
  namespace: crawler-daum
  labels:
    app: crawler
spec:
  schedule: "5,35 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              workingDir: /usr/local/app
              env:
                - name: ELASTIC_SEARCH_INDEX
                  value: $(INDEX_ECONOMY)
              envFrom:
                - configMapRef:
                    name: daum
              args: ["python3", "batch.py", "--category", "daum", "--job_id", "economy"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: international
  namespace: crawler-daum
  labels:
    app: crawler
spec:
  schedule: "10,40 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              workingDir: /usr/local/app
              env:
                - name: ELASTIC_SEARCH_INDEX
                  value: $(INDEX_INTERNATIONAL)
              envFrom:
                - configMapRef:
                    name: daum
              args: ["python3", "batch.py", "--category", "daum", "--job_id", "international"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: it
  namespace: crawler-daum
  labels:
    app: crawler
spec:
  schedule: "15,45 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              workingDir: /usr/local/app
              env:
                - name: ELASTIC_SEARCH_INDEX
                  value: $(INDEX_IT)
              envFrom:
                - configMapRef:
                    name: daum
              args: ["python3", "batch.py", "--category", "daum", "--job_id", "it"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opinion
  namespace: crawler-daum
  labels:
    app: crawler
spec:
  schedule: "20,50 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              workingDir: /usr/local/app
              env:
                - name: ELASTIC_SEARCH_INDEX
                  value: $(INDEX_OPINION)
              envFrom:
                - configMapRef:
                    name: daum
              args: ["python3", "batch.py", "--category", "daum", "--job_id", "opinion"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: politics
  namespace: crawler-daum
  labels:
    app: crawler
spec:
  schedule: "25,55 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              workingDir: /usr/local/app
              env:
                - name: ELASTIC_SEARCH_INDEX
                  value: $(INDEX_POLITICS)
              envFrom:
                - configMapRef:
                    name: daum
              args: ["python3", "batch.py", "--category", "daum", "--job_id", "politics"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: society
  namespace: crawler-daum
  labels:
    app: crawler
spec:
  schedule: "0,30 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              workingDir: /usr/local/app
              env:
                - name: ELASTIC_SEARCH_INDEX
                  value: $(INDEX_SOCIETY)
              envFrom:
                - configMapRef:
                    name: daum
              args: ["python3", "batch.py", "--category", "daum", "--job_id", "society"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: sports
  namespace: crawler-daum
  labels:
    app: crawler
spec:
  schedule: "5,35 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 200m
                  memory: 200Mi
              workingDir: /usr/local/app
              env:
                - name: ELASTIC_SEARCH_INDEX
                  value: $(INDEX_SPORTS)
              envFrom:
                - configMapRef:
                    name: daum
              args: ["python3", "batch.py", "--category", "daum", "--job_id", "sports"]
