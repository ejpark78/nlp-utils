---
apiVersion: v1
kind: Service
metadata:
  name: mq
  namespace: crawler-naver
  labels:
    app: mq
spec:
  type: LoadBalancer
  selector:
    app: mq
  externalIPs:
    - 172.20.78.250
  ports:
    - port: 35672
      targetPort: 5672

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mq
  namespace: crawler-naver
  labels:
    app: mq
spec:
  selector:
    matchLabels:
      app: mq
  replicas: 1
  template:
    metadata:
      labels:
        app: mq
    spec:
      restartPolicy: Always
      containers:
        - name: default
          image: rabbitmq:3-management
          imagePullPolicy: Always
          ports:
            - containerPort: 5672
          env:
            - name: RABBITMQ_DEFAULT_PASS
              value: nlplab!
            - name: RABBITMQ_DEFAULT_USER
              value: user

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipeline
  namespace: crawler-naver
  labels:
    app: pipeline
spec:
  selector:
    matchLabels:
      app: pipeline
  replicas: 1
  template:
    metadata:
      labels:
        app: pipeline
    spec:
      restartPolicy: Always
      containers:
        - name: default
          image: corpus:5000/crawler/corpus_pipeline:latest
          imagePullPolicy: Always
          env:
            - name: CONSUMER_EXCHANGE_NAME
              value: corpus_pipeline
            - name: CONSUMER_HOST
              value: mq.crawler-naver.svc.cluster.local
            - name: CONSUMER_PORT
              value: "35672"
            - name: CONSUMER_USER_NAME
              value: user
            - name: CONSUMER_USER_PASSWD
              value: nlplab!
            - name: ELASTIC_HOST
              value: https://corpus.ncsoft.com:9200
            - name: NLU_WRAPPER_URL
              value: http://nluwrapper.nlu-wrapper.svc.cluster.local:30000/
            - name: USE_CONSUMER
              value: "1"

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: economy
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "0,30 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "economy"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: international
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "5,35 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "international"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: it
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "10,40 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "it"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: living
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "15,45 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "living"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: opinion
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "20,50 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "opinion"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: politics
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "25,55 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "politics"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: society
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "0,30 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "society"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: sports
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "5,35 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "sports"]

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: tv
  namespace: crawler-naver
  labels:
    app: crawler
spec:
  schedule: "10,40 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            group: "crawler"
          containers:
            - name: default
              image: corpus:5000/crawler:latest
              imagePullPolicy: Always
              workingDir: /usr/local/app
              args: ["python3", "batch.py", "--category", "naver", "--job_id", "tv"]
