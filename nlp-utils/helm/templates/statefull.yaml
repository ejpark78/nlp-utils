---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "notebook.fullname" . }}
  labels:
    app: {{ template "notebook.fullname" . }}
    chart: {{ template "notebook.chart" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "notebook.fullname" . }}
  serviceName: "jupyer"
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "notebook.fullname" . }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: In
                    values:
                      - {{ .Values.nodeName }}
      containers:
        - name: jupyter
          image: "{{ .Values.jupyter.image.repository }}:{{ .Values.jupyter.image.tag }}"
          imagePullPolicy: {{ .Values.jupyter.image.pullPolicy }}
          ports:
            - containerPort: 8888
              name: jupyter
            - containerPort: 6006
              name: tensorboard
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "notebook.fullname" . }}
                  key: password
          livenessProbe:
            httpGet:
              path: /
              port: 8888
          readinessProbe:
            httpGet:
              path: /
              port: 8888
          volumeMounts:
            - mountPath: /home/user
              name: home
  volumeClaimTemplates:
    - metadata:
        name: home
      spec:
        accessModes:
          - ReadWriteOnce
        volumeMode: Filesystem
        resources:
          requests:
            storage: 100Gi
        storageClassName: "rbd"
